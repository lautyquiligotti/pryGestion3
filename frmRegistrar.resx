<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        CcAN3P4fpc2c13EgkYQAAAAASUVORK5CYII=
</value>
  </data>
</root>